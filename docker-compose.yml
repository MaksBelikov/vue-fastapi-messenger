services:
  rabbitmq:
    image: rabbitmq:4.1.3-management-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    restart: always
    ports:
      - "15672:15672" #
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:alpine3.22
    container_name: redis
    hostname: redis
    restart: always
    ports:
      - "6379:6379" #
    command: redis-server --requirepass "${REDIS_PASS}" --appendonly yes
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    image: maksbelikov/authservice:latest
    container_name: authservice
    restart: unless-stopped
    working_dir: /app
    env_file: .env
    command: sh -c "alembic upgrade head && python src/main.py"
    ports:
      - "8001:8001"
    depends_on:
      auth-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  auth-db:
    image: postgres:17.5
    container_name: auth_db
    restart: always
    env_file: .env
    environment:
      - POSTGRES_DB=${AUTH_DB_NAME}
      - POSTGRES_USER=${AUTH_DB_USER}
      - POSTGRES_PASSWORD=${AUTH_DB_PASS}
    volumes:
      - auth-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${AUTH_DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  message-service:
    image: maksbelikov/messageservice:latest
    container_name: messageservice
    restart: unless-stopped
    working_dir: /app
    env_file: .env
    command: sh -c "alembic upgrade head && python src/main.py"
    ports:
      - "8000:8000"
    depends_on:
      message-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  message-db:
    image: postgres:17.5
    container_name: message_db
    restart: always
    env_file: .env
    environment:
      - POSTGRES_DB=${MESSAGE_DB_NAME}
      - POSTGRES_USER=${MESSAGE_DB_USER}
      - POSTGRES_PASSWORD=${MESSAGE_DB_PASS}
    volumes:
      - message-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${MESSAGE_DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-service:
    image: maksbelikov/userservice:latest
    container_name: userservice
    restart: unless-stopped
    working_dir: /app
    env_file: .env
    command: sh -c "alembic upgrade head && python src/main.py"
    ports:
      - "8002:8002"
    depends_on:
      user-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy

  user-db:
    image: postgres:17.5
    container_name: user_db
    restart: always
    env_file: .env
    ports:
      - "5554:5432"
    environment:
      - POSTGRES_DB=${USER_DB_NAME}
      - POSTGRES_USER=${USER_DB_USER}
      - POSTGRES_PASSWORD=${USER_DB_PASS}
    volumes:
      - user-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${USER_DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  auth-db:
  message-db:
  user-db:
  rabbitmq-data:
  redis-data: